name: Approval timeout template
description: |
      "This is a custom action to check whether a deployment was approved "
      "and eventually cancel it if not approved before the chosen timeout deadline."
author: pierrz

inputs:
  ENVIRONMENT:
    required: true
  TIMEOUT_MINUTES:
    required: true
  GITHUB_TOKEN:
    required: true
  GITHUB_REPO:
    required: true
  GITHUB_RUN_ID:
    required: true

runs:
  using: "composite"
  steps:
    - name: Run approval timeout action
      shell: bash
      run: |
        echo "Waiting ${{ inputs.TIMEOUT_MINUTES }} minutes for approval ..."

        # iterative checks every minute
        for ((i=1; i<=${{ inputs.TIMEOUT_MINUTES }}; i++)); do

          if [[ $i -gt 1 ]]; then
            MINUTE_STRING="minutes"
          else
            MINUTE_STRING="minute"
          fi

          sleep 60
          echo "Checking status after $i $MINUTE_STRING ..."

          DEPLOYMENT_RESPONSE=$(curl -s \
            -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ inputs.GITHUB_REPO }}/deployments?environment=${{ inputs.ENVIRONMENT }}&per_page=1")

          DEPLOYMENT_ID=$(echo "$DEPLOYMENT_RESPONSE" | jq -r '.[0].id')
          STATUS_RESPONSE=$(curl -s \
            -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ inputs.GITHUB_REPO }}/deployments/$DEPLOYMENT_ID/statuses")

          STATUS=$(echo "$STATUS_RESPONSE" | jq -r '.[0].state')
          if [[ ($STATUS == "error" || "$STATUS" == "waiting") && $i -lt ${{ inputs.TIMEOUT_MINUTES }} ]]; then
            echo "Approval not received yet - keep waiting for it"
          else
            break
          fi

        done

        # tags: error, failure, inactive, in_progress, queued, pending, success
        echo "Current deployment status is '$STATUS'"
        if [[ $STATUS != "error" && "$STATUS" != "waiting" ]]; then
          echo "--> Approval received"
          exit 0
        else
          echo "--> No approval found - cancelling workflow ..."
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ inputs.GITHUB_REPO }}/actions/runs/${{ inputs.GITHUB_RUN_ID }}/cancel"
          echo "Workflow cancelled"
          exit 1
        fi

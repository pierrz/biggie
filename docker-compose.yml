# TODO:
#  - mount/retrieve Spark, Mongo and Postgres logs
#  - implement Mongo conf for authentication
#  - debug setup

x-biggie-common:
  environment:
    &biggie-common-env
    # MONGODB_URI: "${MONGODB_URI}"
    MONGO_USERNAME: "${MONGO_USERNAME}"
    MONGO_PWD: "${MONGO_PWD}"
    MONGODB_URI: "mongodb://${MONGO_USERNAME}:${MONGO_PWD}@${COMPOSE_PREFIX}biggie_mongo:27017/"
    DB_NAME: "${DB_NAME}"
    DB_USER: "${DB_USER}"
    DB_PASSWORD: "${DB_PASSWORD}"
    COMPOSE_PREFIX: "${COMPOSE_PREFIX}"

x-biggie-orchestrator:
  &biggie-orchestrator
  environment:
    &biggie-orchestrator-env
    <<: *biggie-common-env
    TOKEN_GITHUB_API: "${TOKEN_GITHUB_API}"
    CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
    CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    # PYTHON_ENABLE_DEBUGGER: 1   # debug mode
  volumes:
    - ${LOGS_DIR}/orchestrator:/opt/orchestrator/logs
    - ${DATA_DIR}:/opt/data

volumes:
  biggie_vmongo:
    name: ${COMPOSE_PREFIX}biggie_vmongo
  biggie_vpostgres:
    name: ${COMPOSE_PREFIX}biggie_vpostgres
  biggie_vrabbitmq:
    name: ${COMPOSE_PREFIX}biggie_vrabbitmq

networks:
  biggie-network:
    name: biggie_network
    driver: bridge
    ipam:
      config:
        # specific range to avoid conflicts with the bridge network (172.17)
        - subnet: ${DOCKER_SUBNET_BASE}.0/16
        # - subnet: 172.24.0.0/16

services:

  mongo:
    container_name: ${COMPOSE_PREFIX}biggie_mongo
    build: db/mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    volumes:
      - biggie_vmongo:/data/db
      - ${LOGS_DIR}/mongodb:/var/log/mongodb
      # TODO: implement authentication for api container calls
      # - ./db/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.101

  postgres:
    container_name: ${COMPOSE_PREFIX}biggie_postgres
    build: db/postgres
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - biggie_vpostgres:/var/lib/postgresql/data
      - ./db/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ${LOGS_DIR}/postgresql:/var/log/postgresql #/postgresql-14.9-main.log
    ports:
      - "5432:5432"
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.102

  api-test:
    container_name: ${COMPOSE_PREFIX}biggie_api-test
    build:
      context: .
      dockerfile: api/Dockerfile
      args:
        - TEST_MODE="True"
    environment:
      <<: *biggie-common-env
    command: pytest -vv
    depends_on:
      - mongo
      - postgres
    profiles:
      - test
    volumes:
      - ${LOGS_DIR}/api:/var/log/api/
      # Dev speed up (no build)
      # - ./api:/opt/api
      # - ./db/mongo_db.py:/opt/api/src/db/mongo_db.py
      # - ./db/postgres_db.py:/opt/api/src/db/postgres_db.py
      # - ./commons:/opt/api/src/commons
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.121

  api-prod:
    container_name: ${COMPOSE_PREFIX}biggie_api-prod
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      <<: *biggie-common-env
    command: uvicorn main:app --host 0.0.0.0 --reload --log-level info
    depends_on:
      - mongo
      - postgres
    ports:
      - "8100:8100"
    profiles:
      - prod_full
      - prod_analytics
    volumes:
      - ${LOGS_DIR}/api:/var/log/api/
      - ${DATA_DIR}/github_events/diagrams:/opt/api/templates/github_events/diagrams
      # Dev speed up (no build)
      # - ./api:/opt/api
      # - ./db/mongo_db.py:/opt/api/src/db/mongo_db.py
      # - ./db/postgres_db.py:/opt/api/src/db/postgres_db.py
      # - ./commons:/opt/api/src/commons
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.122

  orchestrator-test:
    container_name: ${COMPOSE_PREFIX}biggie_orchestrator-test
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
      args:
        - TEST_MODE="True"
    <<: *biggie-orchestrator
    depends_on:
      - biggie-rabbitmq
      - mongo
      - postgres
      - spark-master
      - spark-worker-1
      - spark-worker-2
    command: python3 -m pytest -vv test/spark_jobs/test_mongo.py
    profiles:
      - test
    restart: on-failure
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.131

  orchestrator-prod:
    container_name: ${COMPOSE_PREFIX}biggie_orchestrator-prod
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    <<: *biggie-orchestrator
    depends_on:
      - biggie-rabbitmq
      - mongo
      - postgres
      - spark-master
      - spark-worker-1
      - spark-worker-2
    command: sh run.sh
    profiles:
      - prod_full
      - prod_acquisition
    restart: on-failure
    # ports:
    #   - "5678:5678"  # Expose debugging port
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.132

  biggie-rabbitmq:
    container_name: ${COMPOSE_PREFIX}biggie_rabbitmq
    build:
      context: .
      dockerfile: rabbit-mq/Dockerfile
      args:
        - DEFAULT_PORT=${RABBITMQ_PORT}
    restart: on-failure
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "1${RABBITMQ_PORT}:1${RABBITMQ_PORT}"
    volumes:
      - biggie_vrabbitmq:/var/lib/rabbitmq
      - ${LOGS_DIR}/rabbitmq:/var/log/rabbitmq
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.133

  spark-master:
    container_name: ${COMPOSE_PREFIX}biggie_spark-master
    build: spark_cluster
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"  # Spark master port
      - "8080:8080"  # Web UI for Spark master
    depends_on:
      - mongo
      - postgres
    volumes:
      - ${LOGS_DIR}/spark:/opt/bitnami/spark/logs
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.141

  spark-worker-1:
    container_name: ${COMPOSE_PREFIX}biggie_spark-worker-1
    build: spark_cluster
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - mongo
      - postgres
    ports:
      - "8091:8091"  # Web UI for this worker
    volumes:
      - ${LOGS_DIR}/spark:/opt/bitnami/spark/logs
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.142

  spark-worker-2:
    container_name: ${COMPOSE_PREFIX}biggie_spark-worker-2
    build: spark_cluster
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - mongo
      - postgres
    ports:
      - "8092:8092"  # Web UI for this worker
    volumes:
      - ${LOGS_DIR}/spark:/opt/bitnami/spark/logs
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.143

# TODO:
#  - Postgres, Mongo and Spark logs as files (permissions issues related to their volumes)
#  - check/enable Postgres authentication
#  - debug setup

name: "${COMPOSE_PREFIX}biggie"

x-biggie-common-env: &biggie-common-env
  COMPOSE_PREFIX: "${COMPOSE_PREFIX}"
  DB_NAME: "${DB_NAME}"
  MONGODB_URI: "mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${COMPOSE_PREFIX}biggie_mongo:27017/?authSource=${DB_NAME}"
  POSTGRESDB_HOST: "${COMPOSE_PREFIX}biggie_postgres:5432"
  POSTGRES_APP_USER: "${POSTGRES_APP_USER}"
  POSTGRES_APP_PASSWORD: "${POSTGRES_APP_PASSWORD}"

x-postgres-env: &postgres-env
  DB_NAME: "${DB_NAME}"
  POSTGRES_DB: "${POSTGRES_DB}"
  POSTGRES_USER: "${POSTGRES_USER}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  POSTGRES_APP_USER: "${POSTGRES_APP_USER}"
  POSTGRES_APP_PASSWORD: "${POSTGRES_APP_PASSWORD}"

x-mongo-env: &mongo-env
  DB_NAME: "${DB_NAME}"
  MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
  MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
  MONGO_USERNAME: "${MONGO_USERNAME}"
  MONGO_PASSWORD: "${MONGO_PASSWORD}"
  ME_CONFIG_MONGODB_ADMINUSERNAME: "${ME_CONFIG_MONGODB_ADMINUSERNAME}"
  ME_CONFIG_MONGODB_ADMINPASSWORD: "${ME_CONFIG_MONGODB_ADMINPASSWORD}"

x-biggie-orchestrator: &biggie-orchestrator
  environment:
    <<: *biggie-common-env
    CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
    CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    TOKEN_GITHUB_API: "${TOKEN_GITHUB_API}"
  volumes:
    - ${LOGS_DIR}/orchestrator:/opt/orchestrator/logs
    - ${DATA_DIR}/orchestrator:/opt/data

volumes:
  biggie-vmongo:
    name: ${COMPOSE_PREFIX}biggie_vmongo
  biggie-vpostgres:
    name: ${COMPOSE_PREFIX}biggie_vpostgres
  biggie-vrabbitmq:
    name: ${COMPOSE_PREFIX}biggie_vrabbitmq

networks:
  biggie-network:
    name: ${COMPOSE_PREFIX}biggie_network
    driver: bridge
    ipam:
      config:
        # specific range to avoid conflicts with the bridge network (172.17)
        - subnet: ${DOCKER_SUBNET_BASE}.0/16

services:

  # Port: 27017
  mongo:
    container_name: ${COMPOSE_PREFIX}biggie_mongo
    build: db/mongo
    restart: always
    environment:
      <<: *mongo-env
    volumes:
      - biggie-vmongo:/data/db
      - ./db/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./db/mongo/mongod.conf:/etc/mongod.conf:ro
      # - ${LOGS_DIR}/mongodb:/var/log/mongodb
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.101

  # Port: 5432
  postgres:
    container_name: ${COMPOSE_PREFIX}biggie_postgres
    build: db/postgres
    restart: always
    environment:
      <<: *postgres-env
    volumes:
      - biggie-vpostgres:/var/lib/postgresql/data
      - ./db/postgres/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh:ro
      # - ./db/postgres/pg_hba.conf:/etc/postgresql/postgresql-14.9/main/pg_hba.conf
      # - ./db/postgres/pg_hba.conf:/etc/postgresql/postgresql-14.9/main/postgresql.conf
      # - ${LOGS_DIR}/postgresql:/var/log/postgres
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.102

  # Port: 8888
  jupyterlab:
    container_name: ${COMPOSE_PREFIX}biggie_jupyterlab
    build:
      context: notebook
      args:
        - JUPYTER_HASHED_PASSWORD=${JUPYTER_HASHED_PASSWORD}
        - HOST_USER_UID=${HOST_USER_UID}
        # - JUPYTER_SUBDOMAIN=${JUPYTER_SUBDOMAIN}    # TODO: refine jupyter config
    restart: always
    volumes:
      - ${DATA_DIR}/jupyterlab:/home/jovyan/work
    profiles:
      - prod_analytics
      - prod_full
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.111

  api-test:
    container_name: ${COMPOSE_PREFIX}biggie_api-test
    build:
      context: .
      dockerfile: api/Dockerfile
      args:
        - TEST_MODE="True"
    environment:
      <<: *biggie-common-env
      DOCKER_SUBNET_BASE: ${DOCKER_SUBNET_BASE}
      API_PORT: ${API_PORT}
    command: pytest -vv
    depends_on:
      - mongo
      - postgres
    profiles:
      - test
    volumes:
      - ${LOGS_DIR}/api:/var/log/api/
      # Dev speed up (no build)
      # - ./api:/opt/api
      # - ./db/mongo_db.py:/opt/api/src/db/mongo_db.py
      # - ./db/postgres_db.py:/opt/api/src/db/postgres_db.py
      # - ./commons:/opt/api/src/commons
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.121

  # Port: 8100
  api-prod:
    container_name: ${COMPOSE_PREFIX}biggie_api-prod
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      <<: *biggie-common-env
      DOCKER_SUBNET_BASE: ${DOCKER_SUBNET_BASE}
      API_PORT: ${API_PORT}
    command: ["uvicorn", "main:app",
            "--host", "${DOCKER_SUBNET_BASE}.122",
            "--port", "8100",
            "--reload", "--log-level", "info"]
    depends_on:
      - mongo
      - postgres
    profiles:
      - prod_full
      - prod_analytics
    volumes:
      - ${LOGS_DIR}/api:/var/log/api/
      - ${DATA_DIR}/orchestrator/github_events/diagrams:/opt/api/templates/github_events/diagrams
      # Dev speed up (no build)
      # - ./api:/opt/api
      # - ./db/mongo_db.py:/opt/api/src/db/mongo_db.py
      # - ./db/postgres_db.py:/opt/api/src/db/postgres_db.py
      # - ./commons:/opt/api/src/commons
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.122

  orchestrator-test:
    container_name: ${COMPOSE_PREFIX}biggie_orchestrator-test
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
      args:
        - TEST_MODE="True"
    <<: *biggie-orchestrator
    depends_on:
      - rabbitmq
      - mongo
      - postgres
      - spark-master
      - spark-worker-1
      - spark-worker-2
    command: python3 -m pytest -vv
    profiles:
      - test
    restart: on-failure
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.131

  # Port: 5678
  orchestrator-prod:
    container_name: ${COMPOSE_PREFIX}biggie_orchestrator-prod
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    <<: *biggie-orchestrator
    depends_on:
      - rabbitmq
      - mongo
      - postgres
      - spark-master
      - spark-worker-1
      - spark-worker-2
    command: sh run.sh
    profiles:
      - prod_full
      - prod_acquisition
    restart: on-failure
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.132

  # Ports: 5672/15672
  rabbitmq:
    container_name: ${COMPOSE_PREFIX}biggie_rabbitmq
    image: rabbitmq:3.13.7-management
    restart: on-failure
    volumes:
      - biggie-vrabbitmq:/var/lib/rabbitmq
      - ${LOGS_DIR}/rabbitmq:/var/log/rabbitmq
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.133

  # Ports (service/UI): 7077/8080
  spark-master:
    container_name: ${COMPOSE_PREFIX}biggie_spark-master
    build: spark_cluster
    environment:
      - SPARK_MODE=master
    depends_on:
      - mongo
      - postgres
    # volumes:
    #   - ${LOGS_DIR}/spark:/opt/bitnami/spark/logs
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.141

  # Ports (UI): 8091
  spark-worker-1:
    container_name: ${COMPOSE_PREFIX}biggie_spark-worker-1
    build: spark_cluster
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - mongo
      - postgres
    # volumes:
    #   - ${LOGS_DIR}/spark:/opt/bitnami/spark/logs
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.142

  # Ports (UI): 8092
  spark-worker-2:
    container_name: ${COMPOSE_PREFIX}biggie_spark-worker-2
    build: spark_cluster
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - mongo
      - postgres
    # volumes:
    #   - ${LOGS_DIR}/spark:/opt/bitnami/spark/logs
    profiles:
      - test
      - prod_full
      - prod_acquisition
    networks:
      biggie-network:
        ipv4_address: ${DOCKER_SUBNET_BASE}.143
